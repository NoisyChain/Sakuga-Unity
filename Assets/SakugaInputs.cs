//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/SakugaInputs.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @SakugaInputs: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @SakugaInputs()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""SakugaInputs"",
    ""maps"": [
        {
            ""name"": ""Keyboard1"",
            ""id"": ""e3507c82-8909-4664-8491-0c63f97f7054"",
            ""actions"": [
                {
                    ""name"": ""Up"",
                    ""type"": ""Button"",
                    ""id"": ""21be7bf4-458b-4460-b5ba-7b443f10a340"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Down"",
                    ""type"": ""Button"",
                    ""id"": ""ee18980a-4d37-4996-9281-8bf0cf656cc5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Left"",
                    ""type"": ""Button"",
                    ""id"": ""ac4098b3-13d9-4c8b-90b7-32f503dc0742"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Right"",
                    ""type"": ""Button"",
                    ""id"": ""55bd5689-20d6-45bb-b89f-1edec1bb7a1a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Face A"",
                    ""type"": ""Button"",
                    ""id"": ""1c7c2b04-958d-42e5-b389-68f2296716e2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Face B"",
                    ""type"": ""Button"",
                    ""id"": ""924e6042-0771-4801-a2ad-347b8f0f84cb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Face C"",
                    ""type"": ""Button"",
                    ""id"": ""2f103a41-bcac-4281-b971-a6605d42e620"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Face D"",
                    ""type"": ""Button"",
                    ""id"": ""696174c3-aa34-4b62-b876-2fc91ed968b1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""0f35ff97-cc33-4527-9a69-0e993f397ea8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""f89a957a-6bb0-4c7a-81b6-23c563000f59"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4e18e427-5c6c-4121-a6e2-57b51f9fa5c7"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bb51d0c1-4205-42b7-86b9-c64c26b5c897"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cf6b703c-1e86-438a-af7a-38d6bfcc3104"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c34cfaef-1c0e-4487-8f7f-2f391c9b2f95"",
                    ""path"": ""<Keyboard>/u"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Face A"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""13760f39-391d-4308-86d1-47daa96f74f7"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Face B"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""46ea1b0b-f67f-4931-8243-799574f3f869"",
                    ""path"": ""<Keyboard>/o"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Face C"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0b468837-25b3-45dc-aacc-28af6168a796"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Face D"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""30835edf-6b5e-4550-bffd-54bb4fb383da"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Keyboard2"",
            ""id"": ""d79f80a0-831f-402b-aea2-2b57deccfd51"",
            ""actions"": [
                {
                    ""name"": ""Up"",
                    ""type"": ""Button"",
                    ""id"": ""d1be5486-82b3-430e-9ec7-941550edba2a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Down"",
                    ""type"": ""Button"",
                    ""id"": ""fa24167b-2fec-4a76-97e8-237daafe2e8c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Left"",
                    ""type"": ""Button"",
                    ""id"": ""b918e909-02ac-4c43-880c-fb7022c05856"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Right"",
                    ""type"": ""Button"",
                    ""id"": ""aa132468-905e-46c8-8ae8-7b2fb879f9e9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Face A"",
                    ""type"": ""Button"",
                    ""id"": ""35b16e0e-b02d-45f6-aa0e-bcf6445916e2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Face B"",
                    ""type"": ""Button"",
                    ""id"": ""63f60c9f-b7df-46cf-b44b-ddfe206c2d98"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Face C"",
                    ""type"": ""Button"",
                    ""id"": ""afb7e130-43f3-4f92-899f-784e10a02d76"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Face D"",
                    ""type"": ""Button"",
                    ""id"": ""56dd5c7a-c1e3-49d8-bdc6-49092322f6a6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""f9054d7a-c277-4904-b97b-43487efe37a7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""5cf8e81f-7655-439a-9895-b5ba1a4be581"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fcc77095-8de2-476a-8942-d0218f15df78"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b32dbbc9-2fa6-45ce-a562-eca4708abdab"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f710b50d-ece5-4be0-acff-de19b4fef77f"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""57acd5d3-12b4-40c6-aa5c-330b6ed5f192"",
                    ""path"": ""<Keyboard>/numpad4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Face A"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7980ba35-8411-4976-93b2-c6c9efcc91d5"",
                    ""path"": ""<Keyboard>/numpad5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Face B"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e7575e0e-b3f7-48cd-804d-3e782238f425"",
                    ""path"": ""<Keyboard>/numpad6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Face C"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2b61d75d-70fe-4055-923a-54f935bd660a"",
                    ""path"": ""<Keyboard>/numpad1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Face D"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""69b0ae30-3534-4a3e-86aa-b50db309dfb4"",
                    ""path"": ""<Keyboard>/numpadEnter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Keyboard1
        m_Keyboard1 = asset.FindActionMap("Keyboard1", throwIfNotFound: true);
        m_Keyboard1_Up = m_Keyboard1.FindAction("Up", throwIfNotFound: true);
        m_Keyboard1_Down = m_Keyboard1.FindAction("Down", throwIfNotFound: true);
        m_Keyboard1_Left = m_Keyboard1.FindAction("Left", throwIfNotFound: true);
        m_Keyboard1_Right = m_Keyboard1.FindAction("Right", throwIfNotFound: true);
        m_Keyboard1_FaceA = m_Keyboard1.FindAction("Face A", throwIfNotFound: true);
        m_Keyboard1_FaceB = m_Keyboard1.FindAction("Face B", throwIfNotFound: true);
        m_Keyboard1_FaceC = m_Keyboard1.FindAction("Face C", throwIfNotFound: true);
        m_Keyboard1_FaceD = m_Keyboard1.FindAction("Face D", throwIfNotFound: true);
        m_Keyboard1_Pause = m_Keyboard1.FindAction("Pause", throwIfNotFound: true);
        // Keyboard2
        m_Keyboard2 = asset.FindActionMap("Keyboard2", throwIfNotFound: true);
        m_Keyboard2_Up = m_Keyboard2.FindAction("Up", throwIfNotFound: true);
        m_Keyboard2_Down = m_Keyboard2.FindAction("Down", throwIfNotFound: true);
        m_Keyboard2_Left = m_Keyboard2.FindAction("Left", throwIfNotFound: true);
        m_Keyboard2_Right = m_Keyboard2.FindAction("Right", throwIfNotFound: true);
        m_Keyboard2_FaceA = m_Keyboard2.FindAction("Face A", throwIfNotFound: true);
        m_Keyboard2_FaceB = m_Keyboard2.FindAction("Face B", throwIfNotFound: true);
        m_Keyboard2_FaceC = m_Keyboard2.FindAction("Face C", throwIfNotFound: true);
        m_Keyboard2_FaceD = m_Keyboard2.FindAction("Face D", throwIfNotFound: true);
        m_Keyboard2_Pause = m_Keyboard2.FindAction("Pause", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Keyboard1
    private readonly InputActionMap m_Keyboard1;
    private List<IKeyboard1Actions> m_Keyboard1ActionsCallbackInterfaces = new List<IKeyboard1Actions>();
    private readonly InputAction m_Keyboard1_Up;
    private readonly InputAction m_Keyboard1_Down;
    private readonly InputAction m_Keyboard1_Left;
    private readonly InputAction m_Keyboard1_Right;
    private readonly InputAction m_Keyboard1_FaceA;
    private readonly InputAction m_Keyboard1_FaceB;
    private readonly InputAction m_Keyboard1_FaceC;
    private readonly InputAction m_Keyboard1_FaceD;
    private readonly InputAction m_Keyboard1_Pause;
    public struct Keyboard1Actions
    {
        private @SakugaInputs m_Wrapper;
        public Keyboard1Actions(@SakugaInputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @Up => m_Wrapper.m_Keyboard1_Up;
        public InputAction @Down => m_Wrapper.m_Keyboard1_Down;
        public InputAction @Left => m_Wrapper.m_Keyboard1_Left;
        public InputAction @Right => m_Wrapper.m_Keyboard1_Right;
        public InputAction @FaceA => m_Wrapper.m_Keyboard1_FaceA;
        public InputAction @FaceB => m_Wrapper.m_Keyboard1_FaceB;
        public InputAction @FaceC => m_Wrapper.m_Keyboard1_FaceC;
        public InputAction @FaceD => m_Wrapper.m_Keyboard1_FaceD;
        public InputAction @Pause => m_Wrapper.m_Keyboard1_Pause;
        public InputActionMap Get() { return m_Wrapper.m_Keyboard1; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(Keyboard1Actions set) { return set.Get(); }
        public void AddCallbacks(IKeyboard1Actions instance)
        {
            if (instance == null || m_Wrapper.m_Keyboard1ActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_Keyboard1ActionsCallbackInterfaces.Add(instance);
            @Up.started += instance.OnUp;
            @Up.performed += instance.OnUp;
            @Up.canceled += instance.OnUp;
            @Down.started += instance.OnDown;
            @Down.performed += instance.OnDown;
            @Down.canceled += instance.OnDown;
            @Left.started += instance.OnLeft;
            @Left.performed += instance.OnLeft;
            @Left.canceled += instance.OnLeft;
            @Right.started += instance.OnRight;
            @Right.performed += instance.OnRight;
            @Right.canceled += instance.OnRight;
            @FaceA.started += instance.OnFaceA;
            @FaceA.performed += instance.OnFaceA;
            @FaceA.canceled += instance.OnFaceA;
            @FaceB.started += instance.OnFaceB;
            @FaceB.performed += instance.OnFaceB;
            @FaceB.canceled += instance.OnFaceB;
            @FaceC.started += instance.OnFaceC;
            @FaceC.performed += instance.OnFaceC;
            @FaceC.canceled += instance.OnFaceC;
            @FaceD.started += instance.OnFaceD;
            @FaceD.performed += instance.OnFaceD;
            @FaceD.canceled += instance.OnFaceD;
            @Pause.started += instance.OnPause;
            @Pause.performed += instance.OnPause;
            @Pause.canceled += instance.OnPause;
        }

        private void UnregisterCallbacks(IKeyboard1Actions instance)
        {
            @Up.started -= instance.OnUp;
            @Up.performed -= instance.OnUp;
            @Up.canceled -= instance.OnUp;
            @Down.started -= instance.OnDown;
            @Down.performed -= instance.OnDown;
            @Down.canceled -= instance.OnDown;
            @Left.started -= instance.OnLeft;
            @Left.performed -= instance.OnLeft;
            @Left.canceled -= instance.OnLeft;
            @Right.started -= instance.OnRight;
            @Right.performed -= instance.OnRight;
            @Right.canceled -= instance.OnRight;
            @FaceA.started -= instance.OnFaceA;
            @FaceA.performed -= instance.OnFaceA;
            @FaceA.canceled -= instance.OnFaceA;
            @FaceB.started -= instance.OnFaceB;
            @FaceB.performed -= instance.OnFaceB;
            @FaceB.canceled -= instance.OnFaceB;
            @FaceC.started -= instance.OnFaceC;
            @FaceC.performed -= instance.OnFaceC;
            @FaceC.canceled -= instance.OnFaceC;
            @FaceD.started -= instance.OnFaceD;
            @FaceD.performed -= instance.OnFaceD;
            @FaceD.canceled -= instance.OnFaceD;
            @Pause.started -= instance.OnPause;
            @Pause.performed -= instance.OnPause;
            @Pause.canceled -= instance.OnPause;
        }

        public void RemoveCallbacks(IKeyboard1Actions instance)
        {
            if (m_Wrapper.m_Keyboard1ActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IKeyboard1Actions instance)
        {
            foreach (var item in m_Wrapper.m_Keyboard1ActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_Keyboard1ActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public Keyboard1Actions @Keyboard1 => new Keyboard1Actions(this);

    // Keyboard2
    private readonly InputActionMap m_Keyboard2;
    private List<IKeyboard2Actions> m_Keyboard2ActionsCallbackInterfaces = new List<IKeyboard2Actions>();
    private readonly InputAction m_Keyboard2_Up;
    private readonly InputAction m_Keyboard2_Down;
    private readonly InputAction m_Keyboard2_Left;
    private readonly InputAction m_Keyboard2_Right;
    private readonly InputAction m_Keyboard2_FaceA;
    private readonly InputAction m_Keyboard2_FaceB;
    private readonly InputAction m_Keyboard2_FaceC;
    private readonly InputAction m_Keyboard2_FaceD;
    private readonly InputAction m_Keyboard2_Pause;
    public struct Keyboard2Actions
    {
        private @SakugaInputs m_Wrapper;
        public Keyboard2Actions(@SakugaInputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @Up => m_Wrapper.m_Keyboard2_Up;
        public InputAction @Down => m_Wrapper.m_Keyboard2_Down;
        public InputAction @Left => m_Wrapper.m_Keyboard2_Left;
        public InputAction @Right => m_Wrapper.m_Keyboard2_Right;
        public InputAction @FaceA => m_Wrapper.m_Keyboard2_FaceA;
        public InputAction @FaceB => m_Wrapper.m_Keyboard2_FaceB;
        public InputAction @FaceC => m_Wrapper.m_Keyboard2_FaceC;
        public InputAction @FaceD => m_Wrapper.m_Keyboard2_FaceD;
        public InputAction @Pause => m_Wrapper.m_Keyboard2_Pause;
        public InputActionMap Get() { return m_Wrapper.m_Keyboard2; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(Keyboard2Actions set) { return set.Get(); }
        public void AddCallbacks(IKeyboard2Actions instance)
        {
            if (instance == null || m_Wrapper.m_Keyboard2ActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_Keyboard2ActionsCallbackInterfaces.Add(instance);
            @Up.started += instance.OnUp;
            @Up.performed += instance.OnUp;
            @Up.canceled += instance.OnUp;
            @Down.started += instance.OnDown;
            @Down.performed += instance.OnDown;
            @Down.canceled += instance.OnDown;
            @Left.started += instance.OnLeft;
            @Left.performed += instance.OnLeft;
            @Left.canceled += instance.OnLeft;
            @Right.started += instance.OnRight;
            @Right.performed += instance.OnRight;
            @Right.canceled += instance.OnRight;
            @FaceA.started += instance.OnFaceA;
            @FaceA.performed += instance.OnFaceA;
            @FaceA.canceled += instance.OnFaceA;
            @FaceB.started += instance.OnFaceB;
            @FaceB.performed += instance.OnFaceB;
            @FaceB.canceled += instance.OnFaceB;
            @FaceC.started += instance.OnFaceC;
            @FaceC.performed += instance.OnFaceC;
            @FaceC.canceled += instance.OnFaceC;
            @FaceD.started += instance.OnFaceD;
            @FaceD.performed += instance.OnFaceD;
            @FaceD.canceled += instance.OnFaceD;
            @Pause.started += instance.OnPause;
            @Pause.performed += instance.OnPause;
            @Pause.canceled += instance.OnPause;
        }

        private void UnregisterCallbacks(IKeyboard2Actions instance)
        {
            @Up.started -= instance.OnUp;
            @Up.performed -= instance.OnUp;
            @Up.canceled -= instance.OnUp;
            @Down.started -= instance.OnDown;
            @Down.performed -= instance.OnDown;
            @Down.canceled -= instance.OnDown;
            @Left.started -= instance.OnLeft;
            @Left.performed -= instance.OnLeft;
            @Left.canceled -= instance.OnLeft;
            @Right.started -= instance.OnRight;
            @Right.performed -= instance.OnRight;
            @Right.canceled -= instance.OnRight;
            @FaceA.started -= instance.OnFaceA;
            @FaceA.performed -= instance.OnFaceA;
            @FaceA.canceled -= instance.OnFaceA;
            @FaceB.started -= instance.OnFaceB;
            @FaceB.performed -= instance.OnFaceB;
            @FaceB.canceled -= instance.OnFaceB;
            @FaceC.started -= instance.OnFaceC;
            @FaceC.performed -= instance.OnFaceC;
            @FaceC.canceled -= instance.OnFaceC;
            @FaceD.started -= instance.OnFaceD;
            @FaceD.performed -= instance.OnFaceD;
            @FaceD.canceled -= instance.OnFaceD;
            @Pause.started -= instance.OnPause;
            @Pause.performed -= instance.OnPause;
            @Pause.canceled -= instance.OnPause;
        }

        public void RemoveCallbacks(IKeyboard2Actions instance)
        {
            if (m_Wrapper.m_Keyboard2ActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IKeyboard2Actions instance)
        {
            foreach (var item in m_Wrapper.m_Keyboard2ActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_Keyboard2ActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public Keyboard2Actions @Keyboard2 => new Keyboard2Actions(this);
    public interface IKeyboard1Actions
    {
        void OnUp(InputAction.CallbackContext context);
        void OnDown(InputAction.CallbackContext context);
        void OnLeft(InputAction.CallbackContext context);
        void OnRight(InputAction.CallbackContext context);
        void OnFaceA(InputAction.CallbackContext context);
        void OnFaceB(InputAction.CallbackContext context);
        void OnFaceC(InputAction.CallbackContext context);
        void OnFaceD(InputAction.CallbackContext context);
        void OnPause(InputAction.CallbackContext context);
    }
    public interface IKeyboard2Actions
    {
        void OnUp(InputAction.CallbackContext context);
        void OnDown(InputAction.CallbackContext context);
        void OnLeft(InputAction.CallbackContext context);
        void OnRight(InputAction.CallbackContext context);
        void OnFaceA(InputAction.CallbackContext context);
        void OnFaceB(InputAction.CallbackContext context);
        void OnFaceC(InputAction.CallbackContext context);
        void OnFaceD(InputAction.CallbackContext context);
        void OnPause(InputAction.CallbackContext context);
    }
}
